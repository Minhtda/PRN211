// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository.Models;

namespace Repository.Migrations
{
    [DbContext(typeof(LIBRARYDBContext))]
    partial class LIBRARYDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Repository.Models.Docgium", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("ID")
                        .IsFixedLength(true);

                    b.Property<string>("DiaChi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenDocGia")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("char(100)")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.ToTable("DOCGIA");
                });

            modelBuilder.Entity("Repository.Models.Loaisach", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("ID")
                        .IsFixedLength(true);

                    b.Property<string>("LoaiSach1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("LoaiSach");

                    b.HasKey("Id");

                    b.ToTable("LOAISACH");
                });

            modelBuilder.Entity("Repository.Models.Muontra", b =>
                {
                    b.Property<string>("Docgiaid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("DOCGIAID")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("HanTra")
                        .HasColumnType("date");

                    b.Property<DateTime?>("NgayMuon")
                        .HasColumnType("date");

                    b.Property<DateTime?>("NgayTra")
                        .HasColumnType("date");

                    b.Property<string>("Nhanvienid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("NHANVIENID")
                        .IsFixedLength(true);

                    b.Property<string>("Phatid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("PHATID")
                        .IsFixedLength(true);

                    b.Property<string>("Quyensachid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("QUYENSACHID")
                        .IsFixedLength(true);

                    b.Property<bool?>("TinhTrangMuon")
                        .HasColumnType("bit");

                    b.Property<bool?>("TinhTrangTra")
                        .HasColumnType("bit");

                    b.HasIndex("Docgiaid");

                    b.HasIndex("Nhanvienid");

                    b.HasIndex("Phatid");

                    b.HasIndex("Quyensachid");

                    b.ToTable("MUONTRA");
                });

            modelBuilder.Entity("Repository.Models.Nhanvien", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("ID")
                        .IsFixedLength(true);

                    b.Property<string>("DienThoaiNv")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("DienThoaiNV")
                        .IsFixedLength(true);

                    b.Property<string>("HoTenNv")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("char(100)")
                        .HasColumnName("HoTenNV")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("NgaySinhNv")
                        .HasColumnType("date")
                        .HasColumnName("NgaySinhNV");

                    b.Property<DateTime?>("NgayVaoLam")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("NHANVIEN");
                });

            modelBuilder.Entity("Repository.Models.Nhaxuatban", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("ID")
                        .IsFixedLength(true);

                    b.Property<string>("DiaChiNxb")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DiaChiNXB");

                    b.Property<string>("EmailNxb")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("EmailNXB")
                        .IsFixedLength(true);

                    b.Property<string>("TenNxb")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TenNXB");

                    b.HasKey("Id");

                    b.ToTable("NHAXUATBAN");
                });

            modelBuilder.Entity("Repository.Models.Phat", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("ID")
                        .IsFixedLength(true);

                    b.Property<string>("NguyenNhan")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("PHAT");
                });

            modelBuilder.Entity("Repository.Models.Quyensach", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("ID")
                        .IsFixedLength(true);

                    b.Property<string>("Loaisachid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("LOAISACHID")
                        .IsFixedLength(true);

                    b.Property<string>("Nhaxuatbanid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("NHAXUATBANID")
                        .IsFixedLength(true);

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenSach")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength(true);

                    b.Property<string>("TenTacGia")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Loaisachid");

                    b.HasIndex("Nhaxuatbanid");

                    b.ToTable("QUYENSACH");
                });

            modelBuilder.Entity("Repository.Models.Taikhoan", b =>
                {
                    b.Property<string>("TenTk")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("TenTK")
                        .IsFixedLength(true);

                    b.Property<string>("Idnhanvien")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("IDNHANVIEN")
                        .IsFixedLength(true);

                    b.Property<string>("MatKhau")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength(true);

                    b.Property<string>("Ten")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength(true);

                    b.HasKey("TenTk")
                        .HasName("PK__TAIKHOAN__4CF9E776603D563D");

                    b.HasIndex("Idnhanvien");

                    b.ToTable("TAIKHOAN");
                });

            modelBuilder.Entity("Repository.Models.Muontra", b =>
                {
                    b.HasOne("Repository.Models.Docgium", "Docgia")
                        .WithMany()
                        .HasForeignKey("Docgiaid")
                        .HasConstraintName("FK__MUONTRA__DOCGIAI__33D4B598");

                    b.HasOne("Repository.Models.Nhanvien", "Nhanvien")
                        .WithMany()
                        .HasForeignKey("Nhanvienid")
                        .HasConstraintName("FK__MUONTRA__NHANVIE__35BCFE0A");

                    b.HasOne("Repository.Models.Phat", "Phat")
                        .WithMany()
                        .HasForeignKey("Phatid")
                        .HasConstraintName("FK__MUONTRA__PHATID__36B12243");

                    b.HasOne("Repository.Models.Quyensach", "Quyensach")
                        .WithMany()
                        .HasForeignKey("Quyensachid")
                        .HasConstraintName("FK__MUONTRA__QUYENSA__34C8D9D1");

                    b.Navigation("Docgia");

                    b.Navigation("Nhanvien");

                    b.Navigation("Phat");

                    b.Navigation("Quyensach");
                });

            modelBuilder.Entity("Repository.Models.Quyensach", b =>
                {
                    b.HasOne("Repository.Models.Loaisach", "Loaisach")
                        .WithMany("Quyensaches")
                        .HasForeignKey("Loaisachid")
                        .HasConstraintName("FK__QUYENSACH__LOAIS__2B3F6F97")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Repository.Models.Nhaxuatban", "Nhaxuatban")
                        .WithMany("Quyensaches")
                        .HasForeignKey("Nhaxuatbanid")
                        .HasConstraintName("FK__QUYENSACH__NHAXU__2A4B4B5E")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Loaisach");

                    b.Navigation("Nhaxuatban");
                });

            modelBuilder.Entity("Repository.Models.Taikhoan", b =>
                {
                    b.HasOne("Repository.Models.Nhanvien", "IdnhanvienNavigation")
                        .WithMany("Taikhoans")
                        .HasForeignKey("Idnhanvien")
                        .HasConstraintName("FK__TAIKHOAN__IDNHAN__300424B4")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("IdnhanvienNavigation");
                });

            modelBuilder.Entity("Repository.Models.Loaisach", b =>
                {
                    b.Navigation("Quyensaches");
                });

            modelBuilder.Entity("Repository.Models.Nhanvien", b =>
                {
                    b.Navigation("Taikhoans");
                });

            modelBuilder.Entity("Repository.Models.Nhaxuatban", b =>
                {
                    b.Navigation("Quyensaches");
                });
#pragma warning restore 612, 618
        }
    }
}
